package day03;
/**
 * 抽象类
 * 代表逻辑上的抽象概念
 * 语法
 *  使用abstract声明类
 *  抽象类不能直接实例化(不能使用new创建对象)
 *  抽象类可以保护抽象方法,使用abstract声明的方法
 *  抽象类不能有方法体
 *  抽象类只能被继承,在具体子类中必须实现全部抽象方法
 *  抽象类可以定义变量,引用具体子类的实例
 */
public class Dem12 {

    public static void main(String[] args) {
        
    }
}
abstract class Shape {
    int x;
    int y;
    public abstract boolean contains(int x, int y);
    public void down() {
        y++;
    }
}
class Circle extends Shape {
    int r;
    public Circle(int x, int y, int r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }
    public boolean contains(int x, int y) {
        int a= this.x - x;
        int b= this.y - y;
        return Math.sqrt(a*a+b*b)<=r;
    }
}
