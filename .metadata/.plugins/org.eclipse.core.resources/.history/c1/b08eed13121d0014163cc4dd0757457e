数据库设计
1. 三范式
	1)列的值唯一,不能有重复的列值(必须遵守规则)
	2)属性完全依赖于主键(必须满足第一范式,必须有主键[主键与业务无关],其他列必须完全依赖于主键)
		编号	姓名	性别	专业	专业课时	校区
		1	xxx	m	java	600		//不满足第二范式,因为专业课时强依赖于专业,而不是依赖编号.建议将专业和学生分表建立
		学生编号	姓名	性别	专业编号		专业编号	专业	专业课时	校区		//满足要求,只能引用主键,不能引用非主键
	3)属性不依赖于其他非主属性(在特定场合处于效率的考虑,可以有冗余的设计--违反第三范式)[遵守第二范式,去除传递依赖]
2. E-R关系
	1)仔细阅读系统的需求规约,研究业务需求
		账务账户(用户个人信息),业务账户(os用户名,密码),[一对多关系]		资费标准[多对一关系]
	2)设计并绘制E-R关系图



3. 数据库设计文档
 1)
 ACCOUNT	账务账号
 -------------------------------------
 ID		NUMBER(9)	PK 账务账户ID
 LOGIN_NAME	VARCHAR(20) NOT NULL	用户自服务用户名
 LOGIN_PASSWD VARCHAR(8) NOT NULL 用户自服务密码
 STATUS CHAR(1) NOT NULL 	0:开通 1:暂停 2:删除			//用户信息不是真正意义上删除
 CREATE_DATE DATE NOT NULL	开通日期
 PAUSE_DATE	DATE		暂停日期
 CLOSE_DATE DATE		删除日期
 REAL_NAME VARCHAR(20) NOT NULL	客户真实姓名
 IDCARD VARCHAR(18) NOT NULL 身份证号
 BIRTHDATE DATE NOT NULL	生日
 GENDER CHAR(1) NOT NULL	性别  F:女	M:男
 OCCUPATION VARCHAR(50) NULL	职业
 TELEPHONE VARCHAR(50) NOT NULL 电话
 EMAIL VARCHAR(50) 邮件
 MAILADDRESS VARCHAR(100) NOT NULL
 ZIPCODE CHAR(6) NOT NULL		邮编
 QQ VARCHAR(15)

2) 
 SERVICE
 ---------------------------------------
 ID NUMBER(10)	PK
 ACCOUNT_ID NUMBER(9) FK NOT NULL
 COST_ID NUMBER(4)	FK NOT NULL
 HOST VARCHAR(15) NOT NULL		主机的IP地址
 OS_USERNAME VARCHAR(8) NOT NULL  登录主机的用户名
 OS_PASSWD VARCHAR(8)	NOT NULL  登录主机的密码
 STATUS CHAR(1) NOT NULL   0:开通 1:暂停 2:删除			//状态改变与账务账户注意匹配信息
 CREATE_DATE DATE NOT NULL	开通日期
 PAUSE_DATE	DATE		暂停日期
 CLOSE_DATE DATE		删除日期
 
3)
 COST
 ---------------------------------------
 ID NUMBER(4) PK
 NAME VARCHAR(50) NOT NULL
 BASE_DURATION NUMBER(11) 包时长(小时)	  对应java中的int类型
 BASE_COST NUMBER(7,2) 基费,固定费用(元)
 UNIT_COST NUMBER(7,2) 单位费用,(元/时)
 DESCR VARCHAR(200) 资费描述	//VARCHAR最多不能超过4000
 COST_TYPE CHAR(1) NOT NULL	1:包月 2:套餐 3:计时
 CREATE_DATE DATE NOT NULL	创建日期
 PAUSE_DATE	DATE		暂停日期
 CLOSE_DATE DATE		删除日期

4)
 SERVICE_DETAIL
 ----------------------------------------
 ID NUMBER(11) PK
 SERVICE_ID NUMBER(10) FK NOT NULL		关联SERVICE表单

 HOST VARCHAR(15) NOT NULL	主机IP地址			//不符合第三范式,但是为了查询方便,因此增加冗余
 OS_USERNAME VARCHAR(8)	NOT NULL				//业务数据不会频繁改变才会采用此种方式
 OS_PASSWD VARCHAR(8) NOT NULL
 
 CLIENT_HOST VARCHAR(15) NOT NULL		客户端IP
 PID NUMBER(11) NOT NULL 		进程id
 LOGIN_TIME DATE NOT NULL	 	登入时刻
 LOGOUT_TIME DATE NOT NULL		登出时刻
 DURATION NUMBER(20,9) NOT NULL   登录时长
 COST NUMBER(20,6) NOT NULL  	费用
 
主要业务的操作
1.新建账务账户并开通一个业务账户
2.已有账务账号增加业务账户
3.系统采集并记录日志信息
4.月底对某个账务账户进行结算
5.添加一个资费标准





Oracle可以通过序列来生成主键

1. 序列
create table foo(
	foo_id number(11),
	foo_value varchar(50),
	constraint FOO_PK primary key(foo_id)
)

创建序列DDL
create sequence 序列名 
[start with 开始数值]
[incremet by 递加数值]

create sequence seq_foo start with 5 incremet by 2;
删除序列DDL
drop sequence 序列名

通过伪列nextval获取下一个值(序列自增)
select seq_foo.nextval from 表名
通过currval获取当前序列值(序列不会自增)
select seq_foo.currval from 表名
使用序列值作为主键
insert into foo(foo_id, foo_value) values(seq_foo.nextval, ?);

创建一个账务账户
 AccountDAO
  void save(Account account)
 * List<Account> findAll(int page, int rowsPerPage)
 * int getTotalPages(int rowsPerPage)
  Account findByID(int id)
  void update(Account account)
  void updateStatus(int id, int newStatus)
 * findBy(String idCard, String realName, String loginName, int status)
  
 ServiceDAO
  List<Service) findByAccountID(int accountID)
  void updateStatus(int id, int newStatus)
 CostDAO
 ServiceDetailDAO

 
 
 
 
 
 
 
 